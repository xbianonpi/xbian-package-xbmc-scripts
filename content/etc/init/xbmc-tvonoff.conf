#!upstart

start on started xbian-run or stopped xbmc-exits
stop on starting xbmc

env JOB
env SCREENOFF=no
env XBMCOFF=no
env XBMCEXITON=no
env AFTER=5

pre-start script
	[ ! -e /etc/default/xbmc ] || . /etc/default/xbmc
	[ "$XBMCOFF$SCREENOFF" = yesyes -o "$XBMCEXITON" = yes ] && [ -z "$(runlevel 2>/dev/null | awk '/[06]/{print $2}')" ] \
		&& ! grep -qws ^manual /etc/init/xbmc.override || stop
end script

script
	start -q wait-for-state TIMEOUT=3 WAIT_FOR=xbmc-changesettings WAITER=xbmc-tvonoff WAIT_STATE=stopped ACT=no || :

	[ ! -e /etc/default/xbmc ] || . /etc/default/xbmc

	[ "$JOB" = "xbmc-exits" ] && sleep $((AFTER * 60))

	mkdir -p /run/cc; : > /run/cc/in; : > /run/cc/out
	cec-client -o $OSDNAME -m -d 17 < /run/cc/in >> /run/cc/out &

	[ "$JOB" = xbian-run ] || { [ "$XBMCOFF" = yes ] && echo "standby 0" || echo "on 0"; } >> /run/cc/in
	tail -1 /run/cc/out | while read line; do
		case "$line" in
			*"TV ("*"): power status changed from "*" to 'on'"*)
				echo "$(date) TV ON" >> /run/TV.log
				[ "$XBMCOFF" = yes ] && start xbmc
			;;
		esac
	done
end script

pre-stop script
	if [ -e /run/cc/in ]; then
		[ ! -e /etc/default/xbmc ] || . /etc/default/xbmc
		[ "$XBMCOFF" = yes ] && echo "on 0" >> /run/cc/in || :
		for i in $(seq 1 10); do pgrep cec-client >/dev/null || break; echo q >> /run/cc/in; sleep 0.5; done
		rm -rf /run/cc
	fi
end script
