#!upstart
description "xbmc"

start on started xbmc-preload and (started autofs or xbian-nowait)
stop on starting rc RUNLEVEL=[06]

env MALLOC_MMAP_THRESHOLD_=65536

#
# Following variables may be overwritten by /etc/default/{xbmc,zram-swap}
#
env USER=xbian
env GROUP=xbian
env HOME=/home/xbian
env DAEMON="/usr/local/lib/kodi/kodi.bin"
env DAEMON_ARGS="--standalone -fs"
env DAEMON_LIRC="/run/lirc/lircd"
env PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
env ZTEMPXBMC=0
env DEBUG=''
env RUNLEVEL=2

# only effective during starting until full load. for niceness, set /etc/default/xbmc
#nice +2

emits xbmc-failed-start

normal exit 139 143 TERM

kill timeout 60

pre-start script
	if [ -n "$UPSTART_EVENTS" -o ! -e /run/.no-splash ]; then
		if dpkg --compare-versions "$(dpkg -l | awk '/xbian-package-xbmc[: \t]/{print $3}')" ge "18"; then
			touch /run/.kodi-nolirc
			[ -e /home/xbian/.kodi/media/splash.h264 ] && VS=/home/xbian/.kodi/media/splash.h264 || VS=/usr/local/share/kodi/media/splash.h264
			if [ ! -e /run/nosplash -a -e $VS ]; then
				start-stop-daemon --start --quiet --background --exec $(which xbian-vplay) -- $VS
			fi
		else
			rm -f /run/.kodi-nolirc
			splash --msgtxt="starting kodi..." --infinitebar || :
		fi
		touch /run/.no-splash
	fi

	date +%s > /run/xbmc.starting

	[ ! -e /etc/default/zram-swap ] || . /etc/default/zram-swap
	if [ $ZTEMPXBMC -gt 0 ]; then
		start -q wait-for-state TIMEOUT=30 WAIT_FOR=zram-swap WAITER=xbmc WAIT_STATE=started ACT=no || :
	fi

	start -q wait-for-state TIMEOUT=3 WAIT_FOR=xbmc-tvonoff WAITER=xbmc WAIT_STATE=stopped ACT=no || :
end script

script
	[ ! -e /etc/default/xbmc ] || . /etc/default/xbmc
	sysctl kernel.version | grep -qv RT || DPRIORITY=no

	which "$USERRUN" >/dev/null && $USERRUN xbmc start || :

	if [ -e /run/.kodi-nolirc ]; then
		DAEMON_LIRC=""
	elif [ -e "$DAEMON_LIRC" ]; then
		DAEMON_LIRC="--lircdev $DAEMON_LIRC"
	else
		DAEMON_LIRC="-n"
	fi

	if [ -d /usr/lib/xbmc ]; then
		export LD_LIBRARY_PATH=/usr/lib/xbmc:$(sed -e '/^$\|^#/d' /etc/ld.so.conf.d/*.conf | sed ':a;N;$!ba;s/\n/:/g')
	fi

	if [ "$DPRIORITY" = yes ]; then
		DPRIORITY="--procsched rr:4"
	else
		DPRIORITY=""
	fi

	cd $HOME
	start-stop-daemon $DPRIORITY --chuid $USER:$GROUP --start --exec $DAEMON -- $DAEMON_ARGS $DAEMON_LIRC $DEBUG 2>&1 |\
		while read line; do echo "$(date "+%b %d %T:") $line"; done
end script

post-start script
	if ! start -q wait-for-state TIMEOUT=150 WAIT_FOR=xbmc-loaded WAITER=xbmc WAIT_STATE=started ACT=no; then
		echo 'zz' > /run/lock/xbmc.quit
		initctl emit -n xbmc-failed-start
		stop && exit 1
	fi
	[ ! -e /etc/default/xbmc ] || . /etc/default/xbmc
	which "$USERRUN" >/dev/null && $USERRUN xbmc loaded || :
end script

pre-stop script
	[ ! -e /etc/default/xbmc ] || . /etc/default/xbmc
	if [ ! -e /run/lock/xbmc.quit ]; then
		echo 0 > /run/lock/xbmc.quit
		chown $USER:$GROUP /run/lock/xbmc.quit
		case $RUNLEVEL in
			0) EVENT=ShutDown ;;
			6) EVENT=Reboot ;;
			*) EVENT=Quit ;;
		esac
		timeout 5 xbmc-send.py -a $EVENT || :
	fi
	if [ "$(cat /run/lock/xbmc.quit)" != zz ]; then
		if ! timeout 30 sh -c "while pgrep ${DAEMON##*/} >/dev/null; do sleep 1; done"; then
			echo "$(date "+%b %d %T:") ${DAEMON##*/} still alive after 30s, killing it now"
			pgrep -fa ${DAEMON##*/}.*--debug >/dev/null && pstree -p $(pidof $DAEMON) || :
			pkill -9 $(basename $DAEMON)
		fi
	fi
	exit 0
end script

post-stop script
	[ ! -e /etc/default/xbmc ] || . /etc/default/xbmc
	[ ! -e /sys/class/graphics/fb1/blank ] || echo 1 > /sys/class/graphics/fb1/blank

	which "$USERRUN" >/dev/null && $USERRUN xbmc stop || :
end script
